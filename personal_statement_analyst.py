import streamlit as st
from transformers import AutoTokenizer, AutoModel
import torch
import piheaan as heaan
from piheaan.math import approx
import os
import math


@st.cache_resource
def load_model_and_tokenizer():
    tokenizer = AutoTokenizer.from_pretrained("beomi/kcbert-base")
    model = AutoModel.from_pretrained("beomi/kcbert-base")
    return tokenizer, model


def cosine_similarity_with_HE(arg0):
    arg1, statement_magnitude = embedding_message, magnitude_message

    # copy the input message
    eval.rot_sum([arg0, arg0, arg0, arg0, arg0], [
                 0, 1024, 2048, 3072, 4096], arg0)
    # dot product of enc(user_input) and embedding of statement words
    dot_product = heaan.Ciphertext(context)

    # multiplication each cell of enc(user_input) and embedding of statement words
    eval.mult(arg0, arg1, dot_product)

    # sum of result of multiplication
    for i in range(log_slots - 3, -1, -1):  # each 1024 cell is for one statement
        eval.rot_sum([dot_product, dot_product], [0, 2 ** i], dot_product)
    eval.mult(dot_product, clear_1, dot_product)

    # magnitude of input message
    eval.square(arg0, arg0)
    for i in range(log_slots - 3, -1, -1):
        eval.rot_sum([arg0, arg0], [0, 2 ** i], arg0)
    # clear with 0.0001 (scailing for square root)
    eval.mult(arg0, clear_0001, arg0)

    approx.sqrt(eval, arg0, arg0)
    # recover value
    eval.mult(arg0, clear_100, arg0)

    # magnitude of input message * magnitude of statement words
    cosine_similarities = heaan.Ciphertext(context)
    eval.mult(arg0, statement_magnitude, cosine_similarities)

    # dot_product / (magnitude of input message * magnitude of statement words)
    approx.inverse(eval, cosine_similarities, cosine_similarities)

    eval.bootstrap(cosine_similarities, cosine_similarities)

    eval.mult(dot_product, cosine_similarities, cosine_similarities)

    return cosine_similarities


def compare_and_get_result(cosine_similarities):
    test_result = heaan.Message(log_slots)
    dec.decrypt(cosine_similarities, sk, test_result)

    temp_cosine_similarities = heaan.Ciphertext(context)
    # left rotate 1024 for compare (a vs b, b vs c, c vs d, d vs a)
    eval.left_rotate(cosine_similarities, 1024, temp_cosine_similarities)

    # compare (a vs b, b vs c, c vs d, d vs a)
    approx.compare(eval, cosine_similarities,
                   temp_cosine_similarities, cosine_similarities)

    return cosine_similarities


def statement_type_classifier(sentence):
    # get embedding of user input message
    tokens = tokenizer(sentence, return_tensors='pt',
                       padding=True, truncation=True)
    with torch.no_grad():
        model_output = model(**tokens)[0]
    embedding = torch.mean(model_output, dim=1).squeeze().tolist()
    embedding_message = heaan.Message(log_slots)
    for i in range(len(embedding)):
        embedding_message[i] = embedding[i]

    # encrypt embedding of user input message
    embedding_ciphertext = heaan.Ciphertext(context)
    enc.encrypt(embedding_message, pk, embedding_ciphertext)

    result = cosine_similarity_with_HE(embedding_ciphertext)

    result = compare_and_get_result(result)

    result_message = heaan.Message(log_slots)
    dec.decrypt(result, sk, result_message)

    risk_taker = round(result_message[0].real)
    expertise = round(result_message[1024].real)
    teamwork = round(result_message[2048].real)
    initiative = round(result_message[3072].real)

    # return type of user's statement input
    if (risk_taker == 1 and expertise == 0 and teamwork == 0 and initiative == 0):
        return "risk_taker"
    elif (risk_taker == 0 and expertise == 1 and teamwork == 0 and initiative == 0):
        return "expertise"
    elif (risk_taker == 0 and expertise == 0 and teamwork == 1 and initiative == 0):
        return "teamwork"
    elif (risk_taker == 0 and expertise == 0 and teamwork == 0 and initiative == 1):
        return "initiative"
    else:
        return "unknown"


def main():
    st.title("Personal Statement Classifier")

    # Get the input text
    text = st.text_area("Enter your personal statement:", height=200)

    if st.button("Classify"):
        if text.strip():
            # Execute sentence classification
            result = statement_type_classifier(text)
            st.success(f"The type of the personal statement is: {result}")
        else:
            st.warning("Please enter a personal statement.")


if __name__ == "__main__":
    # pi-heaan setting
    params = heaan.ParameterPreset.FGb
    context = heaan.make_context(params)
    heaan.make_bootstrappable(context)

    key_file_path = "C:/Users/pcw/Downloads/is/keys"
    sk = heaan.SecretKey(context, key_file_path + "/secretkey.bin")
    pk = heaan.KeyPack(context, key_file_path + "/")
    pk.load_enc_key()
    pk.load_mult_key()

    eval = heaan.HomEvaluator(context, pk)
    dec = heaan.Decryptor(context)
    enc = heaan.Encryptor(context)

    log_slots = 14
    num_slots = 2 ** log_slots

    statement_embedding = [0] * 5120  # 1024 * 5 = 5120

    risk_taker_embeddings = []
    expertise_embeddings = []
    teamwork_embeddings = []
    initiative_embeddings = []

    text_1 = """
    저는 항상 새로운 도전을 즐기는 사람입니다. 대학 시절, 저는 전공 외에도 다양한 학문에 도전하고자 부전공으로 경제학을 선택했습니다. 전공과는 전혀 다른 분야였지만, 저는 이를 통해 다양한 시각을 기를 수 있었습니다. 또한, 교내 창업 동아리에 가입하여 팀원들과 함께 스타트업을 설립하는 과정에서 많은 어려움을 겪었지만, 결국 성공적인 투자 유치에 성공하였습니다. 이러한 경험을 통해 저는 도전정신이 얼마나 중요한지 깨달았고, 앞으로도 새로운 도전을 두려워하지 않고 나아가겠습니다.
    """
    text_2 = """
    저는 항상 새로운 목표를 설정하고 그 목표를 달성하기 위해 최선을 다하는 사람입니다. 고등학교 시절, 학교 대표로 과학 경진대회에 참가하게 되었는데, 처음 접하는 분야였기에 많은 어려움이 있었습니다. 그러나 저는 포기하지 않고 꾸준히 연구하고 팀원들과 협력하여 대회에서 우수한 성적을 거둘 수 있었습니다. 이러한 경험을 통해 저는 도전정신과 협력의 가치를 배웠고, 이를 바탕으로 앞으로의 도전에서도 성공을 이끌어내겠습니다.
    """
    text_3 = """
    저는 항상 새로운 도전을 통해 성장하는 것을 목표로 합니다. 대학 시절, 저는 국제 교환학생 프로그램에 지원하여 해외에서 학업을 이어갔습니다. 언어와 문화의 차이로 많은 어려움이 있었지만, 저는 이를 극복하고 현지 학생들과의 협력과 소통을 통해 학업 성취를 이루었습니다. 이러한 경험을 통해 저는 도전정신과 적응력을 기를 수 있었고, 앞으로도 새로운 환경에서 도전을 두려워하지 않고 최선을 다할 것입니다.
    """
    text_4 = """
    저는 도전정신을 바탕으로 어려운 상황에서도 최선을 다하는 사람입니다. 대학교 시절, 저는 공모전에 참여하여 새로운 아이디어를 제안하고 실현하는 과정에서 많은 어려움이 있었습니다. 하지만 저는 포기하지 않고 팀원들과 함께 문제를 해결하며 끝까지 도전하여 최우수상을 수상할 수 있었습니다. 이러한 경험을 통해 저는 도전정신과 문제 해결 능력을 기를 수 있었고, 앞으로의 도전에서도 이러한 가치를 발휘하겠습니다.
    """
    text_5 = """
    저는 항상 새로운 도전을 통해 자신을 발전시키는 것을 목표로 합니다. 고등학교 시절, 저는 학급 대표로 선출되어 다양한 활동을 주도하였습니다. 특히 대규모 행사 준비 과정에서 많은 어려움이 있었지만, 저는 팀원들과 협력하여 문제를 해결하고 성공적으로 행사를 마무리할 수 있었습니다. 이러한 경험을 통해 저는 도전정신과 리더십을 기를 수 있었고, 앞으로도 새로운 도전에서 이러한 가치를 발휘하겠습니다.
    """
    text_6 = """
    저는 도전정신을 바탕으로 항상 새로운 목표를 설정하고 그 목표를 달성하기 위해 노력하는 사람입니다. 대학 시절, 저는 비영리 단체에서 인턴으로 일하면서 다양한 프로젝트를 주도하였습니다. 특히 한 프로젝트에서는 예상치 못한 문제로 어려움을 겪었지만, 팀원들과 함께 해결책을 모색하며 끝까지 도전하여 성공적으로 프로젝트를 완료할 수 있었습니다. 이러한 경험을 통해 저는 도전정신과 협력의 가치를 배웠고, 앞으로도 새로운 도전에서 이러한 가치를 발휘하겠습니다.
    """
    text_7 = """
    저는 항상 새로운 도전을 통해 성장하는 것을 목표로 합니다. 대학 시절, 저는 학과 내에서 연구 프로젝트를 주도하였고, 이를 통해 많은 어려움을 겪었습니다. 하지만 저는 포기하지 않고 팀원들과 함께 문제를 해결하며 끝까지 도전하여 성공적으로 연구를 완료할 수 있었습니다. 이러한 경험을 통해 저는 도전정신과 문제 해결 능력을 기를 수 있었고, 앞으로도 새로운 도전에서 이러한 가치를 발휘하겠습니다.
    """
    text_8 = """
    저는 도전정신을 바탕으로 어려운 상황에서도 최선을 다하는 사람입니다. 고등학교 시절, 저는 과학 동아리에서 활동하면서 다양한 실험을 주도하였습니다. 특히 한 실험에서는 예상치 못한 문제로 어려움을 겪었지만, 저는 포기하지 않고 동아리 회원들과 함께 해결책을 모색하며 끝까지 도전하여 성공적으로 실험을 완료할 수 있었습니다. 이러한 경험을 통해 저는 도전정신과 협력의 가치를 배웠고, 앞으로도 새로운 도전에서 이러한 가치를 발휘하겠습니다.
    """
    text_9 = """
    저는 항상 새로운 목표를 설정하고 그 목표를 달성하기 위해 최선을 다하는 사람입니다. 대학 시절, 저는 교환학생 프로그램에 지원하여 해외에서 학업을 이어갔습니다. 언어와 문화의 차이로 많은 어려움이 있었지만, 저는 이를 극복하고 현지 학생들과의 협력과 소통을 통해 학업 성취를 이루었습니다. 이러한 경험을 통해 저는 도전정신과 적응력을 기를 수 있었고, 앞으로도 새로운 환경에서 도전을 두려워하지 않고 최선을 다할 것입니다.
    """
    text_10 = """
    저는 도전정신을 바탕으로 항상 새로운 목표를 설정하고 그 목표를 달성하기 위해 노력하는 사람입니다. 고등학교 시절, 저는 학급 대표로 선출되어 다양한 활동을 주도하였습니다. 특히 대규모 행사 준비 과정에서 많은 어려움이 있었지만, 저는 팀원들과 협력하여 문제를 해결하고 성공적으로 행사를 마무리할 수 있었습니다. 이러한 경험을 통해 저는 도전정신과 리더십을 기를 수 있었고, 앞으로도 새로운 도전에서 이러한 가치를 발휘하겠습니다.
    """

    text_11 = """
    안녕하십니까? 디지털 마케팅의 새로운 지평을 연다는 목표를 가지고 있는 저는 대학에서 마케팅을 전공하며 다양한 프로젝트와 인턴 경험을 통해 실질적인 역량을 쌓아왔습니다. 특히 소셜 미디어 마케팅 프로젝트를 주도하며 타겟 고객 분석, 콘텐츠 기획, 광고 집행까지 전 과정을 경험했습니다. 이를 통해 달성한 구체적 성과와 배운 점을 바탕으로 귀사의 마케팅 전략에 새로운 시각을 제공할 준비가 되어 있습니다.
    """
    text_12 = """
    컴퓨터 공학을 전공한 저는 코딩과 프로그래밍에 대한 열정을 가지고 있습니다. 학교에서 진행한 다양한 팀 프로젝트와 개인 프로젝트를 통해 실력을 쌓았으며, 특히 'OO' 앱 개발 프로젝트에서는 사용자 경험을 극대화하는 인터페이스 개발에 중점을 두었습니다. 이러한 경험을 통해 배운 점과 기술적 능력을 바탕으로 귀사의 IT 팀에 기여하고자 합니다.
    """
    text_13 = """
    대학에서 심리학과 경영학을 복수 전공하며, 인간의 행동과 조직 내에서의 역동성에 대해 깊이 있게 공부했습니다. 인턴 기간 동안 HR 부서에서 근무하며 직원들의 만족도 조사와 분석 작업을 담당했고, 이를 통해 조직 내 커뮤니케이션 개선 방안을 제시한 바 있습니다. 저는 이러한 경험을 바탕으로 귀사의 인사 정책 개발과 직원 만족도 향상에 기여하고 싶습니다.
    """
    text_14 = """
    경제학을 전공하며 금융 시장과 기업 재무에 대한 이해를 넓혔습니다. 대학교 재학 중 진행한 주식 시장 분석 프로젝트에서는 실시간 데이터 분석을 통해 투자 전략을 수립하는 경험을 했습니다. 또한, 여러 금융 관련 동아리 활동을 통해 시장 트렌드를 빠르게 파악하고 분석하는 능력을 키웠습니다. 이러한 배경을 바탕으로 귀사의 재무 분석 및 투자 전략 수립에 기여하고자 합니다.
    """
    text_15 = """
    기계공학을 전공하며, 제조 공정 최적화에 대한 관심을 가지고 학습해왔습니다. 학부 연구 프로젝트를 통해 에너지 효율을 극대화하는 제조 공정을 설계하였고, 이를 통해 비용 절감과 동시에 지속 가능한 제조 방안을 모색했습니다. 귀사의 생산 효율성 향상과 지속 가능한 제조 전략 구축에 기여할 수 있는 역량을 갖추고 있습니다.
    """
    text_16 = """
    미술과 디자인을 전공하며, 사용자 경험을 중심에 둔 디자인 철학을 가지고 있습니다. 대학교에서 진행한 여러 프로젝트와 전시회를 통해, 제가 구상한 디자인이 어떻게 사용자의 감정과 행동에 영향을 미치는지 직접 확인할 수 있었습니다. 귀사의 제품이나 서비스 디자인을 통해 사용자에게 긍정적인 경험을 제공하고 싶습니다.
    """
    text_17 = """
    저는 경영학을 전공하며, 특히 판매와 관련된 과목에서 두각을 나타냈습니다. 대학교 재학 중, 가상 회사 프로젝트를 진행하며 시장 조사에서부터 제품 기획, 판매 전략 수립에 이르기까지 전 과정을 경험했습니다. 이를 통해 얻은 실질적인 지식과 경험을 바탕으로, 귀사의 판매 팀에 고객의 요구를 정확히 파악하고, 맞춤형 판매 전략을 제안하는 역량을 기여하고자 합니다.
    """
    text_18 = """
    생명과학을 전공하며, 특히 의료와 보건 분야에 큰 관심을 가졌습니다. 대학교에서 진행한 연구 프로젝트를 통해, 보건 정책 개발에 필요한 데이터 분석 및 연구 능력을 키웠습니다. 또한, 여러 보건 관련 봉사 활동에 참여함으로써 커뮤니티의 건강 개선을 위한 실질적인 방안을 모색하는 경험을 쌓았습니다. 이러한 배경을 바탕으로, 귀사의 보건 정책 개발이나 건강 관리 프로그램 개발에 기여하고자 합니다.
    """
    text_19 = """
    화학공학을 전공하며, 특히 신소재 개발에 대한 열정을 키워왔습니다. 대학교에서 진행한 여러 연구 프로젝트를 통해, 소재의 성질을 개선하고 새로운 기능을 부여하는 연구를 진행했습니다. 이 과정에서 팀원들과 협력하며 문제 해결 능력과 창의력을 발휘했습니다. 귀사의 연구개발 팀에 합류하여, 혁신적인 제품 개발을 위한 연구에 기여하고자 합니다.
    """
    text_20 = """
    저는 컴퓨터 과학을 전공하였으며, 특히 소프트웨어 개발과 데이터 분석에 큰 관심을 가지고 있습니다. 대학교에서 진행한 다양한 프로젝트를 통해 프로그래밍 능력을 강화했으며, 특히 파이썬과 자바를 활용한 어플리케이션 개발에 참여하며 실무 경험을 쌓았습니다. 또한, 머신 러닝 모델을 활용하여 사용자 데이터를 분석하고 이를 기반으로 한 맞춤형 서비스 제안 프로젝트를 주도했습니다. 이러한 경험을 바탕으로 귀사의 IT 팀에 합류하여 최신 기술 동향을 반영한 혁신적인 소프트웨어 개발에 기여하고자 합니다.
    제 경력과 관련된 경험들은 제가 귀사의 정보기술 분야에서 활약할 수 있는 충분한 역량을 갖추었음을 보여줍니다. 특히, 혁신적인 아이디어를 실제 제품으로 구현해내는 과정에서 보여준 창의성과 문제 해결 능력은 귀사의 미래 프로젝트에 큰 자산이 될 것입니다. 저는 귀사와 함께 성장하며, IT 분야에서의 새로운 도전을 기대하고 있습니다.
    """

    text_21 = """
    저는 대학 시절, 마케팅 프로젝트 팀의 리더로서 팀을 이끌었던 경험이 있습니다. 이 프로젝트는 지역 소상공인을 위한 마케팅 전략을 수립하는 것이 목표였습니다. 프로젝트를 성공적으로 이끌기 위해 팀원들과의 협력이 필수적이었으며, 이를 위해 다양한 노력을 기울였습니다.
    팀원 간의 갈등 조정
    프로젝트 초기에는 팀원들 간의 의견 차이로 인해 갈등이 자주 발생했습니다. 이를 해결하기 위해 저는 중재자의 역할을 맡아 각자의 의견을 경청하고, 공통의 목표를 재확인하는 자리를 마련했습니다. 이를 통해 팀원들은 서로의 생각을 이해하고, 의견을 조율할 수 있었습니다. 이 과정에서 저는 경청의 중요성과 다양한 관점을 조화롭게 통합하는 능력을 배울 수 있었습니다.
    역할 분담과 강점 활용
    팀원 각자의 강점을 최대한 활용하기 위해 역할을 체계적으로 분담했습니다. 예를 들어, 데이터 분석에 강한 팀원에게는 시장 조사와 데이터 분석을 맡기고, 창의적인 아이디어를 잘 내는 팀원에게는 광고 캠페인 기획을 담당하게 했습니다. 이러한 역할 분담은 각자의 능력을 최대한 발휘하게 하여 전체 프로젝트의 질을 높이는 데 기여했습니다.
    정기적인 피드백과 소통
    프로젝트 진행 중에는 정기적인 회의를 통해 진행 상황을 공유하고, 피드백을 주고받았습니다. 이를 통해 문제점을 신속하게 파악하고, 해결 방안을 모색할 수 있었습니다. 또한, 팀원들이 각자의 의견을 자유롭게 표현할 수 있는 분위기를 조성하여, 창의적이고 혁신적인 아이디어가 많이 나올 수 있었습니다.
    프로젝트의 성공적인 완료
    이러한 협력과 소통의 결과, 우리 팀은 지역 소상공인을 위한 창의적이고 효과적인 마케팅 전략을 수립할 수 있었습니다. 프로젝트 결과물은 교수님과 지역 소상공인들로부터 큰 호평을 받았으며, 실제로 몇몇 소상공인들이 우리의 전략을 적용하여 매출이 상승하는 성과를 거두었습니다. 이 경험은 팀워크의 중요성과 프로젝트 리더로서의 책임감을 깊이 깨닫게 해주었으며, 향후 다양한 협업 상황에서도 큰 자산이 될 것입니다.
    이와 같이 구체적인 경험과 성과를 서술함으로써, 프로젝트 리더로서의 협력 능력을 효과적으로 어필할 수 있습니다.
    """
    text_22 = """
    대학교 3학년 때, 저는 국제 학생 교류 프로그램의 프로젝트 팀 리더로 활동한 경험이 있습니다. 이 프로젝트의 목표는 다양한 국가에서 온 학생들이 서로의 문화를 이해하고 존중하는 환경을 조성하는 것이었습니다. 이 과정에서 저는 팀 내 다양성을 존중하고 이를 팀워크에 통합하는 방법을 배웠습니다.
    문화적 차이를 이해하고 포용하기
    팀이 구성된 초기에는 문화적 차이로 인한 의사소통 장벽이 존재했습니다. 예를 들어, 일부 팀원들은 직접적인 피드백을 선호하는 반면, 다른 팀원들은 간접적인 방식을 선호했습니다. 이 문제를 해결하기 위해, 저는 각 국가의 문화적 배경에 대한 이해를 돕는 워크숍을 조직했습니다. 이를 통해 팀원들은 서로의 문화적 차이를 이해하고 존중하는 방법을 배울 수 있었습니다.
    강점 기반 역할 분담
    다양성을 기반으로 각 팀원의 강점을 최대한 활용하기 위해, 저는 개인의 전문성과 관심사를 고려하여 역할을 분담했습니다. 예를 들어, 디자인에 능숙한 팀원은 홍보 자료 제작을, 다양한 언어에 능통한 팀원은 국제 학생들과의 소통을 담당했습니다. 이러한 접근 방식은 프로젝트의 효율성을 높이는 동시에 팀원 각자가 자신의 능력을 발휘할 수 있는 기회를 제공했습니다.
    성공적인 문화 교류 행사 개최
    저희 팀의 노력 끝에, 다양한 문화적 배경을 가진 학생들이 참여하는 성공적인 문화 교류 행사를 개최할 수 있었습니다. 이 행사에서는 각국의 음식, 전통 의상, 댄스 등을 소개함으로써 학생들이 서로의 문화를 경험하고 이해할 수 있는 기회를 제공했습니다. 행사 후 설문 조사에서 참가자 대다수가 다른 문화에 대한 이해가 깊어졌다고 응답했으며, 학교 내에서의 다문화 간의 소통과 존중의 분위기가 형성되는 데 기여했습니다.
    이 경험을 통해, 저는 다양성을 존중하는 팀워크가 프로젝트의 성공뿐만 아니라 구성원 간의 상호 이해와 존중을 증진시키는 데 중요하다는 것을 깊이 이해하게 되었습니다. 또한, 다양한 배경을 가진 사람들과 효과적으로 협력하는 능력을 개발했으며, 이는 제가 미래에 어떠한 직무에서도 중요한 역량이 될 것입니다.
    """
    text_23 = """
    대학 시절, 저는 학내 스타트업 동아리에서 팀 리더로서 활동하며 새로운 앱 개발 프로젝트를 진행한 경험이 있습니다. 이 프로젝트는 다양한 문제를 해결하기 위해 팀원들과 협력하여 성공적으로 완수한 사례로, 이를 통해 문제 해결을 위한 협력의 중요성을 깊이 깨닫게 되었습니다.
    문제 상황과 초기 대응
    프로젝트 초기, 우리는 앱 개발 과정에서 예기치 못한 기술적 문제와 일정 지연 문제에 직면했습니다. 예를 들어, 앱의 핵심 기능 중 하나인 실시간 채팅 기능이 안정적으로 작동하지 않았습니다. 이 문제를 해결하기 위해 팀원들과 긴급 회의를 소집하고, 문제의 원인을 분석하기 시작했습니다.
    역할 분담과 협력
    문제 해결을 위해 각 팀원의 강점을 최대한 활용하는 것이 중요했습니다. 개발 경험이 풍부한 팀원은 기술적 문제를 해결하는 데 집중하도록 했고, UI/UX 디자인에 능한 팀원은 사용자 경험을 개선하는 작업을 맡겼습니다. 또한, 일정 관리를 위한 전담 팀원을 두어 프로젝트 진행 상황을 체계적으로 관리했습니다. 이와 같은 역할 분담을 통해 각자의 전문성을 최대한 발휘할 수 있도록 했습니다.
    지속적인 의사소통과 피드백
    프로젝트 진행 중, 우리는 매주 정기적으로 회의를 열어 진행 상황을 공유하고 피드백을 주고받았습니다. 이를 통해 문제 발생 시 신속하게 대응할 수 있었으며, 팀원들의 의견을 적극적으로 반영하여 더 나은 해결책을 모색할 수 있었습니다. 예를 들어, 실시간 채팅 기능 문제를 해결하는 과정에서 한 팀원이 제안한 새로운 알고리즘을 적용하여 문제를 성공적으로 해결할 수 있었습니다.
    성과와 교훈
    결과적으로, 우리는 앱을 성공적으로 출시할 수 있었으며, 사용자들로부터 긍정적인 반응을 얻었습니다. 특히, 실시간 채팅 기능은 사용자들 사이에서 큰 호응을 받았습니다. 이 경험을 통해 저는 문제 해결을 위한 협력의 중요성을 깊이 깨닫게 되었으며, 다양한 의견을 조율하고 협력하는 능력을 키울 수 있었습니다.
    이 경험은 앞으로의 어떤 상황에서도 팀원들과 협력하여 문제를 해결할 수 있는 자신감을 심어주었습니다. 문제 해결을 위한 협력은 단순히 문제를 해결하는 데 그치지 않고, 팀의 결속력을 강화하고 더 나은 결과를 도출하는 데 중요한 역할을 한다는 것을 깨달았습니다.
    """
    text_24 = """
    대학 시절, 저는 학교 내 봉사 동아리에서 프로젝트 팀장을 맡아 다양한 활동을 기획하고 실행했습니다. 그 과정에서 저는 팀 내 소통을 통해 팀워크를 강화하는 방법을 배우게 되었으며, 이를 통해 프로젝트의 성공을 이끌어냈습니다.
    초기 소통 문제와 대응
    프로젝트 초기 단계에서 팀원들 간의 소통 부족으로 인해 업무 분담의 효율성이 떨어졌습니다. 예를 들어, 한 팀원이 맡은 작업이 다른 팀원의 작업과 중복되거나, 중요한 정보가 공유되지 않아 일정이 지연되는 문제가 발생했습니다. 이를 해결하기 위해 저는 팀원들과의 소통을 강화하는 방안을 모색하였습니다.
    정기 회의와 피드백 세션
    저는 팀 내 소통을 원활하게 하기 위해 매주 정기 회의를 도입했습니다. 회의에서는 각 팀원의 진행 상황을 공유하고, 발생한 문제점과 그 해결 방안을 논의했습니다. 또한, 각 팀원이 자유롭게 의견을 제시할 수 있는 피드백 세션을 마련하여 모든 팀원이 프로젝트에 적극적으로 참여할 수 있도록 하였습니다.
    소통 도구의 활용
    효과적인 소통을 위해 다양한 도구를 활용했습니다. 예를 들어, 온라인 협업 플랫폼을 통해 팀원들이 실시간으로 작업 내용을 공유하고, 필요한 자료를 쉽게 접근할 수 있도록 했습니다. 또한, 중요한 사항은 이메일과 메신저를 통해 신속하게 전달하여 정보의 누락을 방지했습니다.
    팀워크 강화와 성과
    이러한 소통 강화 노력의 결과, 팀원들 간의 협업이 원활해졌고, 각자의 역할과 책임에 대한 명확한 이해가 이루어졌습니다. 예를 들어, 한 팀원이 제안한 새로운 아이디어가 다른 팀원의 피드백을 통해 더욱 발전하여 프로젝트에 반영되는 등, 창의적인 문제 해결이 가능해졌습니다. 그 결과, 우리는 예정된 기한 내에 프로젝트를 성공적으로 완료할 수 있었고, 봉사 활동을 통해 지역 사회에 긍정적인 영향을 미칠 수 있었습니다.
    이 경험을 통해 저는 소통이 팀워크를 강화하는 데 얼마나 중요한지를 깨달았습니다. 소통을 통해 팀원들의 의견을 존중하고, 협업을 촉진함으로써 더 나은 결과를 도출할 수 있다는 것을 배웠습니다. 이러한 경험은 앞으로 어떤 조직에서도 효과적인 소통과 팀워크를 발휘하는 데 큰 도움이 될 것입니다.
    """
    text_25 = """
    내가 대학교에서 마케팅 동아리의 캠페인 기획팀 팀장을 맡았던 경험은 유연성을 바탕으로 한 팀워크의 중요성을 깊이 이해하게 해준 계기였다. 우리 팀은 대학 축제 기간 동안 진행되는 환경 보호 캠페인을 기획했는데, 이 과정에서 다양한 도전과제와 변화에 직면했다.
    초기 도전과 유연한 대응
    캠페인 시작 전, 예상치 못한 날씨 변화와 참여 인원의 갑작스러운 변동으로 인해 원래 계획했던 활동들을 재조정해야만 했다. 예를 들어, 야외에서 진행하기로 한 청소 활동을 갑작스럽게 실내 활동으로 변경해야 했고, 이에 따라 홍보 전략도 급히 수정해야 했다.
    유연한 역할 분담과 소통
    이런 상황에서 팀원들 간의 유연한 역할 분담과 적극적인 소통이 중요했다. 팀원들은 각자의 전문성을 살려 새로운 환경에 맞는 아이디어를 제안했고, 이를 신속하게 실행에 옮겼다. 예를 들어, 디자인을 담당하는 팀원은 새로운 실내 활동에 맞는 홍보물을 제작했으며, 로지스틱을 관리하는 팀원은 장소 변경에 따른 물류 계획을 재조정했다.
    유연한 문제 해결과 성과
    이러한 유연성은 팀 내에서 빠른 문제 해결을 가능하게 했으며, 예상치 못한 상황에서도 캠페인의 목표를 달성할 수 있도록 도왔다. 최종적으로, 우리의 환경 보호 캠페인은 대학 내외에서 큰 호응을 얻었고, 참여한 학생들 사이에서 환경 보호에 대한 인식을 높이는 데 기여했다.
    교훈과 향후 적용
    이 경험을 통해, 유연성을 바탕으로 한 팀워크의 중요성을 깊이 깨달았다. 유연한 사고와 적극적인 소통을 통해 예상치 못한 상황에서도 팀 목표를 효과적으로 달성할 수 있음을 배웠다. 앞으로 어떤 조직에 소속되더라도 이러한 유연성과 팀워크를 발휘하여 공동의 목표 달성에 기여하고자 한다.
    """
    text_26 = """
    저는 대학 시절, 학생회에서 대규모 학교 축제를 기획하고 운영하는 프로젝트의 팀장을 맡았습니다. 이 경험을 통해 목표 달성을 위해 팀을 동기부여하는 방법을 배우고, 그 중요성을 깨닫게 되었습니다.
    초기 도전과 팀의 사기 저하
    처음 프로젝트를 시작했을 때, 팀원들은 각자의 학업과 병행해야 하는 상황에서 과중한 업무로 인해 사기가 저하된 상태였습니다. 예를 들어, 축제 준비 과정에서 예산 문제와 일정 조율의 어려움으로 인해 팀원들은 목표 달성에 대한 자신감을 잃어가고 있었습니다.
    동기부여 전략 수립
    이 상황을 해결하기 위해 저는 몇 가지 동기부여 전략을 수립했습니다. 먼저, 축제의 비전과 목표를 명확하게 제시하고, 이를 통해 팀원들이 프로젝트의 중요성을 다시 한번 상기할 수 있도록 했습니다. 예를 들어, 축제가 성공적으로 개최되었을 때 학교와 학생들에게 미칠 긍정적인 영향을 강조했습니다.
    개별 성과 인정과 팀의 성취 공유
    또한, 팀원 개개인의 기여를 인정하고 칭찬하는 문화를 조성했습니다. 매주 회의를 통해 각 팀원의 성과를 공유하고, 그들의 노고를 인정하는 시간을 가졌습니다. 이를 통해 팀원들은 자신이 팀의 중요한 일원이라는 느낌을 받을 수 있었고, 이는 자연스럽게 팀 전체의 사기 진작으로 이어졌습니다.
    팀 빌딩 활동과 소통 강화
    팀워크를 강화하기 위해 팀 빌딩 활동도 적극적으로 추진했습니다. 예를 들어, 주말마다 팀원들과 함께 소규모 워크숍을 열어 서로의 의견을 자유롭게 나누고, 문제 해결을 위한 브레인스토밍을 진행했습니다. 이러한 활동은 팀원들 간의 유대감을 높이고, 협력의 중요성을 다시 한번 깨닫게 하는 계기가 되었습니다.
    성과 및 결과
    이러한 동기부여 전략 덕분에 팀원들은 다시 열정을 가지고 프로젝트에 임하게 되었습니다. 결과적으로, 우리는 예정된 기한 내에 모든 준비를 마칠 수 있었고, 축제는 성공적으로 개최되었습니다. 축제에는 예상보다 많은 학생들이 참여했고, 이는 학교 커뮤니티의 결속을 강화하는 데 큰 기여를 했습니다. 또한, 이 경험은 팀원들 모두에게도 큰 성취감을 안겨주었습니다.
    이 경험을 통해 목표 달성을 위해 팀을 동기부여하는 것이 얼마나 중요한지 깨달았습니다. 각 팀원의 기여를 인정하고, 명확한 목표를 제시하며, 소통을 강화하는 것이 팀의 성과에 직접적인 영향을 미친다는 것을 배웠습니다. 앞으로도 이러한 경험을 바탕으로 팀 내에서 긍정적인 영향을 미치고, 공동 목표를 달성하는 데 기여하고자 합니다.
    """
    text_27 = """
    저는 대학교 시절, 학과 대표로 선정되어 진행한 '스마트 캠퍼스 앱 개발 프로젝트'에서 팀장을 맡았습니다. 이 프로젝트는 학생들의 캠퍼스 생활을 편리하게 만들기 위한 다양한 기능을 제공하는 앱을 개발하는 것이었습니다. 초기 기획 단계부터 개발, 출시까지의 과정에서 창의적인 해결책을 도출하는 팀워크가 핵심적인 역할을 했습니다.
    초기 도전과 창의적 접근
    프로젝트 초기, 우리 팀은 학생들의 다양한 요구를 충족시키는 앱 기능을 결정하는 데 어려움을 겪었습니다. 예를 들어, 학생들 사이에서는 캠퍼스 내 위치 공유, 중고 교재 거래, 학교 행사 일정 공유 등의 요구가 다양하게 제시되었습니다. 이러한 요구를 모두 수용하면서도 차별화된 서비스를 제공하는 것이 우리의 과제였습니다.
    아이디어 회의와 창의적 솔루션
    해결책을 찾기 위해, 저는 팀원들과 주기적으로 아이디어 회의를 진행했습니다. 회의에서는 자유로운 분위기 속에서 모든 팀원이 자신의 의견을 개진할 수 있었고, 때로는 브레인스토밍을 통해 완전히 새로운 아이디어도 탄생했습니다. 예를 들어, 캠퍼스 내 위치 공유 기능과 중고 교재 거래 기능을 결합하여, 사용자가 책을 거래할 때 실시간으로 만날 수 있는 장소를 제안하는 기능을 도입하기로 결정했습니다.
    협업과 창의적 문제 해결
    프로젝트 진행 과정에서 발생한 기술적, 운영적 문제들도 창의적인 협업을 통해 해결했습니다. 예를 들어, 앱의 초기 버전에서 배터리 소모가 심각한 문제가 발생했을 때, 팀원들은 공동으로 문제를 분석하고, 배터리 소모를 최소화하는 동시에 기능성을 유지할 수 있는 알고리즘을 개발했습니다.
    성과와 반응
    이러한 창의적인 접근과 협업을 통해 개발한 '스마트 캠퍼스 앱'은 학생들 사이에서 큰 호응을 얻었습니다. 특히, 위치 기반 중고 교재 거래 기능은 많은 학생들에게 큰 인기를 끌었고, 앱 출시 후 6개월 이내에 사용자 수가 5천 명을 넘어섰습니다. 이러한 성공은 단순히 앱의 기능적 측면을 넘어, 창의적인 해결책을 도출하는 팀워크의 중요성을 다시 한번 확인시켜 주었습니다.
    이 경험을 통해, 저는 어떠한 도전과제에 직면하더라도 창의적인 아이디어와 긴밀한 팀워크를 통해 해결할 수 있다는 것을 배웠습니다. 미래에 어떤 조직에 속하게 되더라도, 이러한 경험을 바탕으로 창의적인 해결책을 도출하고 팀을 성공으로 이끄는 데 기여하고자 합니다.
    """
    text_28 = """
    대학 시절, 저는 학과 대표로서 '교내 축제 준비 위원회'의 팀장을 맡았습니다. 축제는 매년 수천 명의 학생들이 참여하는 큰 행사로, 성공적으로 진행하기 위해서는 철저한 준비와 팀 간의 긴밀한 협력이 필요했습니다. 그 해 축제 준비 과정에서 우리는 예상치 못한 위기 상황을 맞닥뜨렸고, 이를 극복하기 위해 팀원들과 함께 긴밀하게 협력하여 문제를 해결한 경험이 있습니다.
    초기 문제와 긴급 대응
    축제 2주 전, 메인 무대 설치를 담당한 외부 업체가 갑작스럽게 계약을 취소하면서 큰 위기에 봉착했습니다. 메인 무대는 축제의 핵심 요소였고, 이를 설치하지 못하면 축제 자체가 무산될 위험이 있었습니다. 이 소식을 접한 즉시, 저는 팀원들과 긴급 회의를 소집하여 상황을 공유하고 대책을 논의했습니다.
    역할 분담과 신속한 문제 해결
    회의 결과, 우리는 신속하게 새로운 무대 설치 업체를 찾기로 결정했습니다. 팀원들은 각자 역할을 분담하여 빠르게 움직였습니다. 일부 팀원은 기존 네트워크를 활용하여 신뢰할 수 있는 업체를 수소문했고, 다른 팀원들은 온라인 검색과 연락을 통해 가능한 업체들과 즉시 접촉했습니다. 저는 전체 과정을 총괄하며 실시간으로 진행 상황을 점검하고, 필요한 경우 결정을 빠르게 내렸습니다.
    긴밀한 협력과 창의적인 문제 해결
    몇 시간 만에 우리는 여러 업체와 접촉할 수 있었고, 그 중 한 곳과 긴급 계약을 체결할 수 있었습니다. 그러나 새로운 문제는 이들이 제시한 무대의 디자인이 기존 계획과 맞지 않는다는 점이었습니다. 이를 해결하기 위해 우리는 축제 테마와 맞는 새로운 디자인을 신속하게 고안하고, 업체와 협력하여 이를 구현할 방법을 찾았습니다. 팀원들은 각자의 전문성을 발휘하여 창의적인 아이디어를 제시했고, 결국 새로운 디자인은 축제의 또 다른 매력 포인트가 되었습니다.
    성과와 피드백
    이러한 긴급 대응과 협력 덕분에 축제는 무사히 진행될 수 있었고, 학생들로부터 큰 호응을 얻었습니다. 특히, 새롭게 디자인된 무대는 많은 이들의 찬사를 받았고, 이는 위기 상황에서도 팀워크와 창의적인 협력이 얼마나 중요한지를 보여주는 사례가 되었습니다. 축제가 끝난 후, 팀원들은 서로의 노고를 인정하고 감사의 말을 전하며 더욱 끈끈한 유대감을 형성할 수 있었습니다.
    이 경험을 통해 저는 위기 상황에서의 긴밀한 협력과 신속한 문제 해결의 중요성을 깊이 깨달았습니다. 앞으로도 이러한 경험을 바탕으로 팀원들과의 긴밀한 협력을 통해 어떠한 어려움도 극복하고, 최상의 결과를 도출할 수 있도록 노력하겠습니다.
    """
    text_29 = """
    제가 대학교 때 소프트웨어 개발 프로젝트 팀의 리더를 맡았던 경험을 바탕으로 효율적인 업무 분담을 통한 팀워크에 대해 서술하겠습니다. 이 프로젝트는 대학교 컴퓨터 공학과에서 마지막 학기에 진행하는 주요 과제로, 우리 팀은 모바일 앱 개발 프로젝트를 맡았습니다. 이 프로젝트는 제한된 시간 안에 완성해야 했기 때문에, 효율적인 업무 분담과 긴밀한 협력이 필수적이었습니다.
    업무 분담과 전략 설정
    프로젝트 초반, 저는 팀원들의 강점과 경험을 면밀히 분석했습니다. 각자의 전문 분야와 관심사를 고려하여 업무를 분담했고, 이를 통해 각자가 가장 잘 할 수 있는 분야에서 최대의 성과를 낼 수 있도록 했습니다. 예를 들어, 사용자 인터페이스(UI) 디자인에 뛰어난 팀원에게는 UI 디자인을, 백엔드 개발 경험이 풍부한 팀원에게는 서버 및 데이터베이스 관리를 맡겼습니다.
    효율적인 커뮤니케이션
    효율적인 업무 분담만큼 중요한 것이 커뮤니케이션입니다. 저희 팀은 정기적인 미팅을 통해 각자의 진행 상황을 공유하고, 문제가 발생했을 때는 함께 해결책을 모색했습니다. 이 과정에서, 각자의 업무에 대한 이해를 돕기 위해 간단하지만 명확한 문서화를 진행했으며, 이는 프로젝트의 효율성을 크게 향상시켰습니다.
    문제 해결과 협력
    프로젝트 중반에, 예기치 않은 기술적 문제가 발생해 일정이 지연될 위기에 처했습니다. 이때, 전체 팀원이 긴밀히 협력하여 문제를 해결하기 위해 노력했습니다. 특히, 문제 해결을 위해 필요한 기술적 지식이 부족한 팀원들은 추가적인 학습에 시간을 할애하며 빠르게 필요한 역량을 갖추었습니다. 결과적으로, 우리 팀은 예상보다 빠르게 문제를 해결하고 프로젝트를 원활하게 진행할 수 있었습니다.
    성과와 반응
    프로젝트의 결과물은 대학 내외부에서 높은 평가를 받았습니다. 특히, 사용자 친화적인 디자인과 안정적인 성능이 돋보였으며, 이는 팀원 각자의 전문성과 효율적인 업무 분담, 그리고 긴밀한 협력의 결과였습니다. 또한, 이 경험을 통해 팀원들 사이의 신뢰와 협력이 더욱 깊어졌으며, 추후 다양한 프로젝트에서도 함께 작업하고 싶은 동료로서의 인연을 맺게 되었습니다.
    이 경험은 저에게 효율적인 업무 분담과 팀워크의 중요성을 깊이 인식시켰습니다. 앞으로도 저는 팀의 강점을 최대한 활용하고, 각 구성원과 긴밀히 협력하여 공동의 목표를 향해 나아가는 리더가 되고자 합니다.
    """
    text_30 = """
    대학 시절, 저는 정보기술 동아리의 부회장으로 활동하며 지속적인 학습과 팀 발전에 기여한 경험이 있습니다. 이 경험을 통해 저는 팀원들의 성장을 돕고, 함께 발전하는 것이 얼마나 중요한지 깨달았습니다. 저의 역할은 동아리원들이 최신 IT 기술을 학습하고, 이를 프로젝트에 적용하여 실력을 향상시키는 것을 도와주는 것이었습니다.
    학습 프로그램 개발 및 실행
    저는 동아리원들이 관심 있는 최신 기술을 배울 수 있도록 다양한 학습 프로그램을 개발했습니다. 예를 들어, 인공지능, 빅데이터, 웹 개발 등 다양한 분야에 대한 스터디 그룹을 조직하고, 해당 분야의 전문가를 초청하여 워크숍을 진행했습니다. 또한, 동아리원들이 직접 강의를 준비하고 발표하는 세미나를 정기적으로 개최하여, 학습과 동시에 발표 능력도 향상시킬 수 있도록 했습니다.
    프로젝트 기반 학습
    이론뿐만 아니라 실제 프로젝트를 진행하며 학습하는 것이 중요하다고 생각했습니다. 따라서, 동아리원들이 스터디 그룹에서 배운 기술을 실제 프로젝트에 적용해 볼 수 있도록 소규모 프로젝트 대회를 주최했습니다. 이를 통해 동아리원들은 실제 문제를 해결하며 학습한 내용을 실천에 옮길 수 있었고, 팀워크와 프로젝트 관리 능력도 향상시킬 수 있었습니다.
    성과 및 반응
    이러한 노력의 결과, 동아리원들의 기술적 실력은 눈에 띄게 향상되었고, 여러 학술대회 및 프로젝트 대회에서 우수한 성적을 거두었습니다. 특히, 한 팀이 국제 학생 프로젝트 대회에서 우수상을 수상하는 큰 성과를 이루었습니다. 또한, 동아리원들 사이의 학습 문화가 활성화되어, 서로가 서로를 가르치고 배우는 긍정적인 분위기가 조성되었습니다.
    이 경험은 저에게 지속적인 학습의 중요성과 팀으로서 함께 성장하는 가치를 깊게 인식시켜 주었습니다. 앞으로도 저는 팀 내에서 지속적인 학습 문화를 조성하고, 모두가 함께 성장할 수 있는 환경을 만드는 데 앞장서겠습니다. 이를 통해 팀의 전체적인 역량을 향상시키고, 더 큰 성과를 달성하는 데 기여하고자 합니다.
    """

    text_31 = """
    저는 대학교 3학년 때 학생회장을 맡으며 다양한 행사를 기획하고 운영하는 역할을 했습니다. 특히, 연례 축제를 준비할 때는 처음부터 끝까지 모든 과정을 주도적으로 이끌었습니다. 예산 관리, 스폰서십 협상, 행사 진행 등 모든 업무를 체계적으로 관리하며 성공적으로 마무리했습니다. 이 경험을 통해 주도성과 리더십을 길렀으며, 이를 바탕으로 귀사에서도 주도적으로 프로젝트를 이끌어 나갈 자신이 있습니다.
    """
    text_32 = """
    학부 시절, 저는 창업 동아리를 결성하여 새로운 비즈니스 아이디어를 구체화하고 실행에 옮겼습니다. 아이디어 발굴부터 시장 조사, 제품 개발, 그리고 마케팅 전략 수립까지 모든 과정을 주도적으로 진행했습니다. 그 결과, 저희 팀은 지역 창업 경진대회에서 1위를 차지할 수 있었습니다. 이러한 경험은 제게 문제 해결 능력과 주도성을 길러주었으며, 귀사에서도 창의적이고 주도적인 역할을 할 수 있을 것입니다.
    """
    text_33 = """
    저는 대학 시절, 학과 내 멘토링 프로그램을 주도적으로 기획하고 운영했습니다. 후배들의 학업 및 진로 상담을 담당하며, 멘티들의 성장을 돕기 위해 다양한 학습 자료와 진로 정보를 제공했습니다. 이를 통해 많은 후배들이 성과를 냈고, 저 역시 주도적으로 문제를 해결하고 사람들을 이끄는 능력을 키울 수 있었습니다. 귀사에서도 주도적인 자세로 팀원들을 지원하고 이끌겠습니다.
    """
    text_34 = """
    저는 학부 2학년 때 교내 봉사 동아리 회장을 맡아 지역 사회 봉사 활동을 주도했습니다. 특히, 지역 아동센터와 협력하여 교육 프로그램을 기획하고 실행하는 프로젝트를 주도했습니다. 이 과정에서 다양한 이해관계자들과 협력하고, 문제 상황을 해결하며 주도적으로 일을 추진하는 능력을 키웠습니다. 이러한 경험을 바탕으로 귀사에서도 주도적으로 사회적 가치를 창출하는 데 기여하고자 합니다.
    """
    text_35 = """
    저는 교내 연구 프로젝트에서 팀장을 맡아 데이터를 수집하고 분석하는 작업을 주도했습니다. 특히, 데이터 분석 도구를 활용하여 효율적으로 데이터를 처리하고, 이를 바탕으로 유의미한 인사이트를 도출해냈습니다. 팀원들과의 협업을 통해 프로젝트를 성공적으로 마무리했으며, 이러한 경험은 제가 주도적으로 일하는 데 큰 도움이 되었습니다. 귀사에서도 데이터를 기반으로 주도적으로 문제를 해결하는 역할을 하고 싶습니다.
    """
    text_36 = """
    저는 해외 교환학생 프로그램에 참여하여 다양한 문화와 환경 속에서 주도적으로 학업과 생활을 병행했습니다. 새로운 환경에 빠르게 적응하고, 현지 학생들과 협업하여 프로젝트를 수행하며 글로벌 감각과 주도성을 키울 수 있었습니다. 이러한 경험을 바탕으로 귀사에서도 글로벌 시장에서 주도적으로 활동할 수 있을 것입니다.
    """
    text_37 = """
    저는 대학교 4학년 때 졸업 논문 프로젝트를 주도적으로 진행했습니다. 주제를 선정하고, 관련 연구를 수행하며 논문을 작성하는 전 과정을 책임졌습니다. 특히, 어려운 문제에 직면했을 때는 다양한 자료를 참고하고 전문가의 조언을 구하며 해결해 나갔습니다. 이러한 경험은 저의 주도성과 문제 해결 능력을 크게 향상시켰습니다. 귀사에서도 주도적으로 프로젝트를 이끌어 나갈 자신이 있습니다.
    """
    text_38 = """
    저는 학부 시절, 교내 IT 동아리에서 프로젝트 매니저로 활동하며 다양한 소프트웨어 개발 프로젝트를 주도했습니다. 팀원들과의 원활한 소통과 협업을 통해 프로젝트를 성공적으로 완수했으며, 특히 주도적으로 문제를 해결하고 목표를 달성하는 데 중점을 두었습니다. 이 경험을 바탕으로 귀사에서도 주도적으로 IT 프로젝트를 이끌어 나가고 싶습니다.
    """
    text_39 = """
    저는 대학교 재학 중 인턴십을 통해 실제 업무 환경에서 주도적으로 일하는 경험을 쌓았습니다. 특히, 마케팅 팀에서 주도적으로 캠페인을 기획하고 실행하여 높은 성과를 달성했습니다. 이 과정에서 창의적인 아이디어를 도출하고, 이를 실제로 구현하는 능력을 키울 수 있었습니다. 귀사에서도 주도적으로 마케팅 전략을 수립하고 실행할 수 있을 것입니다.
    """
    text_40 = """
    저는 대학 시절, 교내 스포츠 동아리에서 팀 주장을 맡아 팀원들을 이끌고 다양한 대회에 참가했습니다. 전략을 세우고 팀원들과의 협력을 통해 목표를 달성하며 주도성과 리더십을 길렀습니다. 이러한 경험은 제가 조직 내에서 주도적으로 일하고 팀을 이끄는 데 큰 도움이 되었습니다. 귀사에서도 주도적으로 팀을 이끌며 목표를 달성하고자 합니다.
    """

    # Calculate the embeddings of risk_taker, expertise, teamwork, initiative
    risk_taker_list = [globals()[f"text_{i}"] for i in range(1, 11)]
    expertise_list = [globals()[f"text_{i}"] for i in range(11, 21)]
    teamwork_list = [globals()[f"text_{i}"] for i in range(21, 31)]
    initiative_list = [globals()[f"text_{i}"] for i in range(31, 41)]

    # Load model and tokenizer
    tokenizer, model = load_model_and_tokenizer()

    # get embedding of personal statement of each talent
    for statement in risk_taker_list:
        tokens = tokenizer(statement, return_tensors='pt',
                           padding=True, truncation=True)
        with torch.no_grad():
            model_output = model(**tokens)[0]
        embedding = torch.mean(model_output, dim=1).squeeze()
        risk_taker_embeddings.append(embedding)
    risk_taker_embedding = torch.mean(
        torch.stack(risk_taker_embeddings), dim=0)

    risk_taker_embedding_list = risk_taker_embedding.tolist()
    for i in range(len(risk_taker_embedding_list)):
        statement_embedding[i] = risk_taker_embedding_list[i]
        statement_embedding[4096 + i] = risk_taker_embedding_list[i]

    # get embedding of personal statement of each talent
    for statement in expertise_list:
        tokens = tokenizer(statement, return_tensors='pt',
                           padding=True, truncation=True)
        with torch.no_grad():
            model_output = model(**tokens)[0]
        embedding = torch.mean(model_output, dim=1).squeeze()
        expertise_embeddings.append(embedding)
    expertise_embedding = torch.mean(torch.stack(expertise_embeddings), dim=0)

    expertise_embedding_list = expertise_embedding.tolist()
    for i in range(len(expertise_embedding_list)):
        statement_embedding[i] = expertise_embedding_list[i]
        statement_embedding[1024 + i] = expertise_embedding_list[i]

    # get embedding of personal statement of each talent
    for statement in teamwork_list:
        tokens = tokenizer(statement, return_tensors='pt',
                           padding=True, truncation=True)
        with torch.no_grad():
            model_output = model(**tokens)[0]
        embedding = torch.mean(model_output, dim=1).squeeze()
        teamwork_embeddings.append(embedding)
    teamwork_embedding = torch.mean(torch.stack(teamwork_embeddings), dim=0)

    teamwork_embedding_list = teamwork_embedding.tolist()
    for i in range(len(teamwork_embedding_list)):
        statement_embedding[i] = teamwork_embedding_list[i]
        statement_embedding[2048 + i] = teamwork_embedding_list[i]

    # get embedding of personal statement of each talent
    for statement in initiative_list:
        tokens = tokenizer(statement, return_tensors='pt',
                           padding=True, truncation=True)
        with torch.no_grad():
            model_output = model(**tokens)[0]
        embedding = torch.mean(model_output, dim=1).squeeze()
        initiative_embeddings.append(embedding)
    initiative_embedding = torch.mean(
        torch.stack(initiative_embeddings), dim=0)

    initiative_embedding_list = initiative_embedding.tolist()
    for i in range(len(initiative_embedding_list)):
        statement_embedding[i] = initiative_embedding_list[i]
        statement_embedding[3072 + i] = initiative_embedding_list[i]

    magnitude_message = heaan.Message(log_slots)

    # make magnitude of statement words
    magnitude_message[0] = math.sqrt(
        sum([statement_embedding[i] ** 2 for i in range(1024)]))
    magnitude_message[4096] = math.sqrt(
        sum([statement_embedding[i] ** 2 for i in range(4096, 5120)]))
    magnitude_message[1024] = math.sqrt(
        sum([statement_embedding[i] ** 2 for i in range(1024, 2048)]))
    magnitude_message[2048] = math.sqrt(
        sum([statement_embedding[i] ** 2 for i in range(2048, 3072)]))
    magnitude_message[3072] = math.sqrt(
        sum([statement_embedding[i] ** 2 for i in range(3072, 4096)]))

    embedding_message = heaan.Message(log_slots)
    for i in range(len(statement_embedding)):
        embedding_message[i] = statement_embedding[i]

    clear_100 = heaan.Message(log_slots)
    clear_100[0] = 100
    clear_100[1024] = 100
    clear_100[2048] = 100
    clear_100[3072] = 100
    clear_100[4096] = 100
    clear_100[5120] = 100

    clear_1 = heaan.Message(log_slots)
    clear_1[0] = 1
    clear_1[1024] = 1
    clear_1[2048] = 1
    clear_1[3072] = 1
    clear_1[4096] = 1
    clear_1[5120] = 1

    clear_0001 = heaan.Message(log_slots)
    clear_0001[0] = 0.0001
    clear_0001[1024] = 0.0001
    clear_0001[2048] = 0.0001
    clear_0001[3072] = 0.0001
    clear_0001[4096] = 0.0001
    clear_0001[5120] = 0.0001

    main()
